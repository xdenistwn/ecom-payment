// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/payment/repository/xendit.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "payment/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockXenditClient is a mock of XenditClient interface.
type MockXenditClient struct {
	ctrl     *gomock.Controller
	recorder *MockXenditClientMockRecorder
}

// MockXenditClientMockRecorder is the mock recorder for MockXenditClient.
type MockXenditClientMockRecorder struct {
	mock *MockXenditClient
}

// NewMockXenditClient creates a new mock instance.
func NewMockXenditClient(ctrl *gomock.Controller) *MockXenditClient {
	mock := &MockXenditClient{ctrl: ctrl}
	mock.recorder = &MockXenditClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockXenditClient) EXPECT() *MockXenditClientMockRecorder {
	return m.recorder
}

// CheckInvoiceStatus mocks base method.
func (m *MockXenditClient) CheckInvoiceStatus(ctx context.Context, externalID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckInvoiceStatus", ctx, externalID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckInvoiceStatus indicates an expected call of CheckInvoiceStatus.
func (mr *MockXenditClientMockRecorder) CheckInvoiceStatus(ctx, externalID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckInvoiceStatus", reflect.TypeOf((*MockXenditClient)(nil).CheckInvoiceStatus), ctx, externalID)
}

// CreateInvoice mocks base method.
func (m *MockXenditClient) CreateInvoice(ctx context.Context, param models.XenditInvoiceRequest) (models.XenditInvoiceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInvoice", ctx, param)
	ret0, _ := ret[0].(models.XenditInvoiceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInvoice indicates an expected call of CreateInvoice.
func (mr *MockXenditClientMockRecorder) CreateInvoice(ctx, param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInvoice", reflect.TypeOf((*MockXenditClient)(nil).CreateInvoice), ctx, param)
}
