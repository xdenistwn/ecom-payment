// Code generated by MockGen. DO NOT EDIT.
// Source: grpc/user_client.go

// Package mock_grpc is a generated GoMock package.
package mocks

import (
	context "context"
	userpb "payment/proto/userpb"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserClient is a mock of UserClient interface.
type MockUserClient struct {
	ctrl     *gomock.Controller
	recorder *MockUserClientMockRecorder
}

// MockUserClientMockRecorder is the mock recorder for MockUserClient.
type MockUserClientMockRecorder struct {
	mock *MockUserClient
}

// NewMockUserClient creates a new mock instance.
func NewMockUserClient(ctrl *gomock.Controller) *MockUserClient {
	mock := &MockUserClient{ctrl: ctrl}
	mock.recorder = &MockUserClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserClient) EXPECT() *MockUserClientMockRecorder {
	return m.recorder
}

// GetUserInfoByUserId mocks base method.
func (m *MockUserClient) GetUserInfoByUserId(ctx context.Context, userID int64) (*userpb.GetUserInfoResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserInfoByUserId", ctx, userID)
	ret0, _ := ret[0].(*userpb.GetUserInfoResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserInfoByUserId indicates an expected call of GetUserInfoByUserId.
func (mr *MockUserClientMockRecorder) GetUserInfoByUserId(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserInfoByUserId", reflect.TypeOf((*MockUserClient)(nil).GetUserInfoByUserId), ctx, userID)
}
